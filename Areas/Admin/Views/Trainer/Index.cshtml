@model IEnumerable<Courses.Models.TrainerModel>

@{
    ViewBag.Title = "Trainers";
}

<h2>Trainers</h2>
<hr />

<p>
    @Html.ActionLink("Create New", "Create")
</p>

<!-- البحث والفلاتر -->
<div class="container mt-4">
    <div class="row">
        <div class="col-md-3">
            <label for="searchCategory" class="font-weight-bold">Select Category</label>
            <select class="form-control" id="searchCategory" onchange="filterTrainers()">
                <option value="all">All Fields</option>
                <option value="name">Trainer Name</option>
                <option value="email">Email</option>
                <option value="website">Website</option>
                <option value="description">Description</option>
            </select>
        </div>
        <div class="col-md-9">
            <label for="searchFilter" class="font-weight-bold">Search</label>
            <input type="text" class="form-control" id="searchFilter" onkeyup="filterTrainers()" placeholder="Search by selected category...">
        </div>
    </div>
</div>

<!-- عرض المدربين في بطاقات -->
<div class="container mt-4">
    <div class="row" id="trainersContainer">
        @foreach (var trainer in Model)
        {
            <div class="col-md-4 mb-4 trainer-card">
                <div class="card shadow-sm h-100">
                    <div class="card-body">
                        <h5 class="card-title trainer-name">@trainer.Name</h5>
                        <h6 class="card-subtitle mb-2 text-muted trainer-email">@trainer.Email</h6>
                        <p class="card-text trainer-description"><strong>Description:</strong> @trainer.Description</p>
                        <p class="card-text">
                            <small class="text-muted">
                                Created on @(trainer.Creation_Dtae.HasValue ? trainer.Creation_Dtae.Value.ToShortDateString() : "N/A")
                            </small>
                        </p>

                        <div class="d-flex justify-content-between">
                            @Html.ActionLink("Courses", "Index", "Course", new { t_id = trainer.ID }, new { @class = "btn btn-sm btn-primary" })
                            <div>
                                @Html.ActionLink("Edit", "Edit", new { id = trainer.ID }, new { @class = "btn btn-sm btn-secondary mr-2" })
                                @Html.ActionLink("Delete", "Delete", new { id = trainer.ID }, new { @class = "btn btn-sm btn-danger" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<script>function filterTrainers() {
        var searchInput = document.getElementById("searchFilter").value.toLowerCase();
        var searchCategory = document.getElementById("searchCategory").value;

        var cards = document.getElementsByClassName("trainer-card");

        for (var i = 0; i < cards.length; i++) {
            var card = cards[i];
            var match = false;

            if (searchCategory === "all") {
                match = card.textContent.toLowerCase().indexOf(searchInput) > -1;
            } else if (searchCategory === "name") {
                match = card.querySelector(".trainer-name").textContent.toLowerCase().indexOf(searchInput) > -1;
            } else if (searchCategory === "email") {
                match = card.querySelector(".trainer-email").textContent.toLowerCase().indexOf(searchInput) > -1;
            } else if (searchCategory === "description") {
                match = card.querySelector(".trainer-description").textContent.toLowerCase().indexOf(searchInput) > -1;
            }

            card.style.display = match ? "block" : "none";
        }
    }</script>
